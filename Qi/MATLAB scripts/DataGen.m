% ==============================================================
% DataGen.m
% A code to generate database (inputs and targets) using circles.
% The volume fraction of interface cell and its adjacent cells is
% found as input data and the target is the curvature of interface
% cell which is constant for a circle. The saved .mat file contains
% an input matrix with nine columns and a target matrix with one
% column. More data could be generated by changing the radius of
% the circle or the grid spacing.
% Author: Yinghe Qi and Gretar Tryggvason (5/25/2018)
% ==============================================================
clear
close all

np=256000; nx=2000; L=1;
DTheta=2*pi/(np-1); %endpoint included twice
xo=0.5;yo=0.5;
datacur=[];
datafra=[];
r=[0.00225:0.001:0.05,0.075:0.025:0.475];

for ir=1:length(r)
    ro=r(ir)
    % ----- Constructing the Interface Shape -----------------
    for i=1:np
        theta=DTheta*(i-1);
        xp(i)=xo+ro*cos(theta); yp(i)=yo+ro*sin(theta);
    end
    % ------ end of constructing the shape -------------------
    
    ny=nx;h=L/(nx-1); % Construct fixed grid
    for i=1:nx,x(i)=h*(i-1);end
    for j=1:ny,y(j)=h*(j-1);end
    
    % -------------- construct the marker --------------------
    xi=zeros(nx-1,ny-1);    % Set the initial value of xi
    for i=1:np-1
        ip1=floor(xp(i)*(nx-1))+1;ip2=floor(xp(i+1)*(nx-1))+1;
        jp1=floor(yp(i)*(ny-1))+1;jp2=floor(yp(i+1)*(ny-1))+1;
        
        xs(1)=xp(i);xs(2)=xp(i+1);xs(3)=xp(i+1);xs(4)=xp(i+1);  % Add two in-
        ys(1)=yp(i);ys(2)=yp(i+1);ys(3)=yp(i+1);ys(4)=yp(i+1);  % between points
        
        if (ip1 ~= ip2)
            if (ip1 < ip2) xv=(ip2-1)*h; end; if (ip1 > ip2) xv=(ip1-1)*h; end;
            yv=yp(i)+((yp(i+1)-yp(i))/(xp(i+1)-xp(i)))*(xv-xp(i));
        end;
        
        if (jp1 ~= jp2)
            if (jp1 < jp2) yh=(jp2-1)*h; end; if (jp1 > jp2) yh=(jp1-1)*h; end;
            xh=xp(i)+((xp(i+1)-xp(i))/(yp(i+1)-yp(i)))*(yh-yp(i));
        end;
        
        if (ip1 ~= ip2) & (jp1 == jp2), xs(2)=xv;ys(2)=yv; end
        if (jp1 ~= jp2) & (ip1 == ip2) xs(2)=xh;ys(2)=yh; end
        
        if (ip1 < ip2) & (jp1 ~= jp2),
            xs(2)=xv;ys(2)=yv; xs(3)=xh;ys(3)=yh;
            if(xv > xh) xs(2)=xh;ys(2)=yh; xs(3)=xv;ys(3)=yv;end
        end
        if (ip1 > ip2) & (jp1 ~= jp2),
            xs(2)=xv;ys(2)=yv; xs(3)=xh;ys(3)=yh;
            if(xv < xh) xs(2)=xh;ys(2)=yh; xs(3)=xv;ys(3)=yv;end
        end
        
        for j=1:3
            ip=floor(0.5*(xs(j)+xs(j+1))*(nx-1))+1;
            jp=floor(0.5*(ys(j)+ys(j+1))*(ny-1))+1;
            dx=-(xs(j+1)-xs(j));
            xi(ip,jp)=xi(ip,jp)+(0.5*(ys(j)+ys(j+1))-y(jp))*dx/h/h;
            for k=1:jp-1;xi(ip,k)=xi(ip,k)+h*dx/h/h; end     % start at the bottom
        end
    end
    
    ip0=-1;
    jp0=-1;
    ncells=0;
    cellloc=zeros(np,2);
    cur=zeros(np,1);
    fra=zeros(np,9);
    for i=1:np-1
        ip=floor(xp(i)*(nx-1))+1;
        jp=floor(yp(i)*(ny-1))+1;
        if (ip~=ip0)||(jp~=jp0)
            ncells=ncells+1;
            ip0=ip;
            jp0=jp;
            cellloc(ncells,:)=[ip0,jp0];
        end
    end
    if cellloc(ncells,:)==cellloc(1,:)
        ncells=ncells-1;
    end
    
    for i=1:ncells
        cur(i)=h/ro;
        fra(i,1)=xi(cellloc(i,1)-1,cellloc(i,2)-1);
        fra(i,2)=xi(cellloc(i,1)-1,cellloc(i,2));
        fra(i,3)=xi(cellloc(i,1)-1,cellloc(i,2)+1);
        fra(i,4)=xi(cellloc(i,1),cellloc(i,2)-1);
        fra(i,5)=xi(cellloc(i,1),cellloc(i,2));
        fra(i,6)=xi(cellloc(i,1),cellloc(i,2)+1);
        fra(i,7)=xi(cellloc(i,1)+1,cellloc(i,2)-1);
        fra(i,8)=xi(cellloc(i,1)+1,cellloc(i,2));
        fra(i,9)=xi(cellloc(i,1)+1,cellloc(i,2)+1);
    end
    cur=cur(1:ncells,:);
    fra=fra(1:ncells,:);

    % generate the database for different radii
    datacur=[datacur;cur];
    datafra=[datafra;fra];
end
% negative curvature
datacur=[datacur;-datacur]
datafra=[datafra;1-datafra]
csvwrite('datacur.csv',datacur)
csvwrite('datafra.csv',datafra)
save('database.mat','datacur','datafra')